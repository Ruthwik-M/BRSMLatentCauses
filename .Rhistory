install.packages("xlsx")
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
Sys.which("make")
install.packages("jsonlite", type = "source")
install.packages("xlsx")
any(grepl("xlsx",installed.packages()))
library("xlsx")
Sys.setenv(JAVA_HOME="")
library("xlsx")
data <- read.xlsx("Healthy Unhealthy Scores.xlsx")
data <- read.xlsx("Healthy Unhealthy Scores.xlsx", sheetIndex = 1)
print (data)
# Save the file.
dev.off()
# Create the histogram.
hist(v,xlab = "Weight",col = "yellow",border = "blue")
View(data)
View(data)
# Create the histogram.
hist(data.Healthy,xlab = "Weight",col = "yellow",border = "blue")
# Create the histogram.
hist(data$Healthy,xlab = "Weight",col = "yellow",border = "blue")
plot(x, dnorm(x, mean = 2, sd = 0.4), type = "l", ylim = c(0, 5), ylab = "", lwd = 2, col = "red")
x <- seq(-4, 10, 0.1)
plot(x, dnorm(x, mean = 2, sd = 0.4), type = "l", ylim = c(0, 5), ylab = "", lwd = 2, col = "red")
normal.a <- rnorm( n=1000, mean=2, sd=1.4 )
hist( normal.a )
p
p <- c (0.0050, 0.0010, 0.0100, 0.0005, 0.0009, 0.0400, 0.0560, 0.0500, 0.0480,
0.0130, 0.0370, 0.0430, 0.0020, 0.0250, 0.1100, 0.0700, 0.0800)
p
pBon <- p.adjust(p, "bonferroni")
pBH <- p.adjust(p, "BH")
lines(alpha, type="l", col="red", lty=3)
alpha <- c (0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,
0.05,0.05,0.05,0.05,0.05)
alpha <- c (0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,
0.05,0.05,0.05,0.05,0.05)
pBHSorted <- sort(pBH)
plot(p, type="o", col="black", main="p-values before and after correction",
xlab="number of times", ylab="p-values", pch=15, xlim=c(1,17), ylim=c(0,1)
)
p <- c (0.0050, 0.0010, 0.0100, 0.0005, 0.0009, 0.0400, 0.0560, 0.0500, 0.0480,
0.0130, 0.0370, 0.0430, 0.0020, 0.0250, 0.1100, 0.0700, 0.0800)
pBon <- p.adjust(p, "bonferroni")
pBH <- p.adjust(p, "BH")
alpha <- c (0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,
0.05,0.05,0.05,0.05,0.05)
pBonSorted <- sort(pBon)
pBHSorted <- sort(pBH)
plot(p, type="o", col="black", main="p-values before and after correction",
xlab="number of times", ylab="p-values", pch=15, xlim=c(1,17), ylim=c(0,1)
)
lines(pBonSorted, type="o", col="blue", pch=16)
lines(pBHSorted, type="o", col="yellow", pch=17)
lines(alpha, type="l", col="red", lty=3)
legend("topleft", legend=c("observed", "bonferroni", "BH", "alpha"),
col=c("black", "blue", "yellow", "red"), lty=1:2, cex=0.8)
p <- c (0.0050, 0.0010, 0.0100, 0.0005, 0.0009, 0.0400, 0.0560, 0.0500, 0.0480,
0.0130, 0.0370, 0.0430, 0.0020, 0.0250, 0.1100, 0.0700, 0.0800)
pBon <- p.adjust(p, "bonferroni")
pBH <- p.adjust(p, "BH")
alpha <- c (0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,
0.05,0.05,0.05,0.05,0.05)
pBonSorted <- sort(pBon)
pBHSorted <- sort(pBH)
plot(p, type="o", col="black", main="p-values before and after correction",
xlab="number of times", ylab="p-values", pch=15, xlim=c(1,17), ylim=c(0,1)
)
lines(pBonSorted, type="o", col="blue", pch=16)
lines(pBHSorted, type="o", col="green", pch=17)
lines(alpha, type="l", col="red", lty=3)
legend("topleft", legend=c("observed", "bonferroni", "BH", "alpha"),
col=c("black", "blue", "green", "red"), lty=1:2, cex=0.8)
setwd("D:/OneDrive - International Institute of Information Technology/2 - Academics/2.1 - PhD (2021 - 2025)/2.1.1 - Courses/Depth Course 2 - BRSM/Project/Data/Original CSVs")
read.csv("observation.csv")
observation = read.csv("observation.csv")
View(observation)
#Read Data
obs = read.csv("observation.csv")
est = read.csv("estimation.csv")
#exp1A
exp1AEst = filter(est, experiment = "exp1A")
#Read Data
obs = read.csv("observation.csv")
est = read.csv("estimation.csv")
#exp1A
exp1AEst = filter(est, experiment == "exp1A")
#Read Data
obs = read.csv("observation.csv")
est = read.csv("estimation.csv")
#exp1A
exp1AEst = filter(est, est.experiment == "exp1A")
#Read Data
obs = read.csv("observation.csv")
est = read.csv("estimation.csv")
#exp1A
exp1AEst = filter(est, est.experiment == "exp1A")
View(est)
#Read Data
obs = read.csv("observation.csv")
est = read.csv("estimation.csv")
#exp1A
exp1AEst = filter(est, est[experiment] == "exp1A")
#exp1A
exp1AEst = est[est$experiment]
#Read Data
obs = read.csv("observation.csv")
est = read.csv("estimation.csv")
#exp1A
exp1AEst = est[est$experiment == "exp1A"]
#Read Data
obs = read.csv("observation.csv")
est = read.csv("estimation.csv")
#exp1A
library(tidyverse)
install.packages("tidyverse")
#Read Data
obs = read.csv("observation.csv")
est = read.csv("estimation.csv")
#exp1A
library(tidyverse)
